plugins {
	id 'java'
	id 'maven-publish'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

def env = project.findProperty('env')

// envが指定されている場合のみ、追加でファイルを読み込む
if (env != null) {
	def envFile = file("build-${env}.gradle")
	if (envFile.exists()) {
		apply from: envFile
		println "Applied build-${env}.gradle"
	}
} else {
	group = 'com.example'
	version = '0.0.2'

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
				// Spring Bootの場合、bootJarを使用したJAR生成を含める
				artifact tasks.bootJar
			}
		}
	}

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	tasks.withType(Test) {
		enabled = false
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}